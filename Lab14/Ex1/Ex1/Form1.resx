<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAVMAAABCCAYAAADqtjX+AAAABGdBTUEAALGPC/xhBQAAHyFJREFUeF7t
        nQdcVFe+x4cpgNHEClOoYkFFKWKJbl7ee9k0Y1SkSO/N3igzQ1FEBXuLKbufTTAiZWAKDCAa377dfcYG
        UhUQiSKssSZqPtHdt7t5Oe/879wZZmAYhqKAnu/ncz9zz3/uvXPvuXN/93/a/zAIBAKBQCAQCAQCgUAg
        EAgEAoFAIBAIBAKBQCDoB6kXNpuNTExM+r3AsTgcDnwSCATCqwGTyUQYEzpJIBAIhD5CPEgCgUDoJ8Qr
        JRAIhAGAeKUEAqH/NDY2zs7NlaygkwMK9vjYR48eFVdXV8+hTUMR4pkSCIT+cfjwJ1uXL/eqePr0KZc2
        DTgPHjzgeXh4XM/JyQmjTUMKaHyiVwkEwqvEvXv3JpaXf/MRnewzEok04sCBQ9uwV2ZGm54b8Bvh4eE1
        EokklDYNFYhXSiC8qmzbtu1Ybm5uEJ3sE1VVVW9On+4EQjKGNj13Hj16NNrNze3pECvyEzElEF5FihUK
        EFFUWCgPVFl6D0KPRru7z0XZ2dnhtOmFkZ+fHxMQEHAZC5g5bRpsiJgSCK8S+IE3S4yPO4afeqSq44OR
        NRy03HNFLXwH29y9e9f+448+vgbfW07gotOnT39M7dyJmoqKheMn8FAr3p42dQGOKZMVBVhZ2+PfYSMu
        T4D27TsQh+3MO3fu2NlYWf8Cm6nPRygUfgH7xMTEXmEw4PyYqLKy1k11tA7u3m21F/C56OrVq3Npk1Eo
        FIrITfFxMjo5YOjrrI/TnJKSkgA+nw91qUggEKC9e/emYrsp5DGXy6Wum2XCpD43bdj0B/ydeWRkZA1c
        N5PJRjU1Na6qoxEIhCHJFVURGWXlyQJUFhVP7t2baGfF+9fvP/tkHTz0zQ3N8ywn8BGTZY4YJmwkTk75
        A2wHQhETHNI2eZobevQIjaZ27gTexiwsLOxqojAlD9bBplCWhXFMzVFCXMLnkL5//z43Ijy4noU39/f1
        +x8QE7D/9a8PJru6zP3HTSy4kO4M+vHHN+a7zEKixJQTtMkoipRlsXFCkRL/jo7w9Q+9QmoWGBh8NTFR
        KFNfU1FRSTiLxUEiUcrXkIZrDw8OusLGm/t5+WquvaWlZdL8N9/6+7VbtyZCmkAgDGGa6qvc8Qf6SqLw
        V1lU7ExNkttyx6LHWiK2PT1DMt7SCt26dU/zcIOYzZ42HXn4hjdiETClzTpI805EOzo6osePH2vqU0F4
        f/veB63+vr5QROeA7Ud8rLlurshy3HgEHhvY5PKS6II8RSSs6wPvy44O9GuZPs0VPXmCxtLmHlEoSlfF
        i5JL8f4DJqbm5q/hw+keTy4vCp82bQb66aefxtEmBuTD0qUercuWLa/D21N5Bvm4wNUNCSZYotamVura
        T548GZGVdSIC1gkEwhDnak0NFI9RVkGRxjPFD7hZVEBA21RbK/yM//gGbWYoZMpINuc1dOFy3WzaxLhz
        86advSUXbRSmZdEmHdDDh6+/NX8OEglF2bTJILWVlfPYDBPksdTzYuXFmvfWrYtTwPnQX+slMzVVybW0
        Rdev33egTT1SVKSM3ZiQAMceMDGF4rj28aCBbNYsFyQUJhXQJoM04Gs3NWGgQB+fc3/+87fvrVm1QYqP
        N1Tqgl885iNYuBgE9R+mOFc5iM3EafyfohZsp+qmcDGJWscLznlq0WzT60VVn6T/O7K8uKWv90F3PzMz
        M+oTIg3hz+eOWkxPFJXpFPOxZ6qwnjAW3bvXUcQsLJSHmzBN0beXOlrPm7EAjGKx0Wbx9i9okw53W1vt
        ueNGo/yc/BDa1CMZ27cf47BM0bvvfPCdtkfXHXvS04osLWzQ9TbjxVQmK4pN2pImH0gxNTFh6Yhpa+td
        exsbOySXy6ON/Z09melfgx58/NGyRmOu/eWGEkwCYXig8Uw71ZniMvNYlxmOyM9nOdUg9fPPP1vMdZ/3
        j8VLPCohTW/GaK7F3hTePC4p/Xe0SQcQ08n2dkgsFFJ1rMYAxeDlyzxvOc90w6fxpMeiOxbTYosJAtTW
        jZjKZAXBIFCwmJqa4+eTidgc/NIywS8xemGyVU6PWCzW+1LQgtoOQuLpEUidZ78VX7uNjQ3asGFDrrFi
        itDjMR++/9vb06Y6oZ9+Qq+2mLLYREwJwwe1mH6ZX9ila1Tt5Ytv+Xp5VIMIQcNQ2pa0fdpCCjzGguHA
        F6BN8VuO0SYdQEwFlhZohbfPebyv3jrVznxTdioqIV6YY8W3RR7LfGrwfgaLuplbUpUTxvOxmD4x2jMt
        LJRFiZNT8o0VuREjRlAiCtuzWCrh7bRv5zQlpg4ODsjX1xeuwWBVhRqlQhYpTIjPFvCskKeHD7y4Xs1i
        PsfMlAgpYVihFtP84hIdMW273uYQt2EDtEAbFAGoF5zr4oKWefnX422phiRtoM51jqsLqAw6f76yS9em
        zlRXX1rwyaHDmbCesT0jd4T56ygnp7DbKgL4zYigoBtOM1xRmxFerJqSkyej16xdb1Rdpj46C6o+TxXy
        xtnZmdquRpXPBqmvrl5waM8BGEFmsnfPnmzoZvX1idyhNsLrBUGK+IRhhlpMj3XyTPekZyrXrl5dhh/s
        Hj2qjLQ02SRcLH38WP/opx1paSdATKF/5YULlzWNV0B5+TdL1S33UD+7fvVqqMekfhPEyHGK0y8C7KF2
        1zVKLeaJ8UmFtMkoFAplTHy8sFf7aKOOfK8WUBBX9bo2O3bsyAJRhD6mly5d0hmpVVJS4qG+dugvu3n9
        +mzta3dxcf77uPFcdPOm/mt/udES06f3n3J3Z+w+7O4253/vDEBm1NbWziss7FoUG6rAH+vw4cPpdXV1
        b9KmIUNa6tZyAY+Pbg1A/z24L3J5ca/vC84f1pFDh7bh/JlPmwYFeIj5fC7aKErOggf5zJn/9oQ6y8jg
        8GvQCAT1i9BKzWawcFFf1VB24MihJNXeKhrxPRZY2aPrbW16i9kgDMuWLG0BUYHjQR9LqLN0nzPvob9/
        IFUExotpVGT41bycHJ1uUCB6sM+06U7o4cOHfNqs4R6+h7Y8HqqtbZ5Hm4wCjrspLl5CJ/uEtneqr7M+
        gG2jFy9e3AiragGG5e23337g5eUF124KS0hwYK28UNcDLysrioJGLUf8ooLgLrR5eAJ/qlmzZj2DTHNw
        cHiKL/p1+iv9MFVievPmTbspEx3+BfVMVnxr/Ga52S8x/fTTz3f7+fm1QOde2jQswH9+weJFi74vzM+P
        pU1Dgt27dp8c88ZoBAE+aFOf2Ldv/+7Q0LCbra2tffqjP6Py56PbBfkFWDAGj88//zSdwWaj/3j/w+8e
        PnxGCdb99vuToN4OHmaqwYYWU0pAsNNQfaWjRR8/F2a+fkHXcwuLur3PsM22tLQ9IMxwvHHjJqC9e/cn
        gx2+T05KzuKwVSOALl9Wea9yqTTCBG8L26uXzuPwi6UFq/w8vb5TH8dYYARUWtr2fDrZV5CpqSmVJ5gu
        QqoGf8fetWsXVF1Q24KHjtMp2E7Vh27ZsuUruG7o+VNxroIa6aRQyMJMKOeMiTjQWIY/sWfrAt8NS06f
        Pu2NBcy4Su1ORXzIwJiI8Hq+hSWC4XK0uddIJNKVBw8e2oWP16s/y1ABzjsyIqK5ML8wija9FGBvdOWB
        A4f29Pe+qPNHlifrtmP6YNCGvczy8jOedFIDPl9mnlSy/sucYzrnW1/ftMBx2kyjWt8HCnB23LGz01Rf
        v4A2DQbw3Os8+4RO0F7p3/Aqwm+xngPddhVTVnhI4FXu+AmoiR7R0FsqKmoWOjpO1xk5MhzBHurrs5xm
        /vPixYtDrsjfFyoqKhbOmDFzwO4LNNK4zHD+x+ULlwe1yK8GukV5LfVu6u76QGjrGutm0kkNOTn5MX7+
        ga34v//cW6DhJRQdFdEoKxzcUo+q6oKIqVGAV8nn8/+Wk5MTTJv00rlLFL7ZnBB/n0YrLk8zNK434P1H
        Ozu7/godpWnTsOabsm9W+nr6XoeHgDYNS/D5vwERkk6cyIumTQMClT/L/a8Nhfz50zf/FQv9HLvzMk//
        8fQ7j9AjvePwlcqyqEWLFt9+nnV8UH0UFBRUd3Dv/v20idAd8IeKjo6u1a6w1V6EvegAPBDAG9rX1/eK
        QU9ETzF/3cqIprGvj0LQ34y2meYVHA/+z3feenD27Fl3qLNb9vEHN1lMBtq9e7eY2pGmpqZmoaUlr9v6
        VnwsTmFhYQgVcQbnk6WlJdTDiLCdSW8yoNy4ccPWwX4iVacFC4fFRnGbNh2Ha4qIiKij6rTYHFRVVQ9j
        vbsA12HDs0Z1VcY3SOEX2Nrk5OQSOmkUp06d8rLiC9D4seOQVCIJamlpmXHm1KnF9NdUUIldGRmfzZnt
        rnnJwTVAXv7b2wueQINSW9t1By8vz3YWywTt3LkzldqRprKy8jcWFtwujVdwfQ4T7f6lmz9xX+Fjm0WG
        4/8yzh82k4Pq6PrAzsD+tlzbXuWPmvKy8tj4xORyOtlvqnAJwsbKHn24aMn99vb7k2gzlU+nysqWPXhq
        WCgrK2vnSaVUaL8BB87hyNEjWyB+Km0iGAJnGCcrKwui1ei8pUFgZs4cuOJVb/jss8+E3f0uh0O16ukA
        1xAa4N1kK+BTYgrXIhQmnqREFy9f4ONV08PyiuWSCAi/VXWRCjoB+5oFBoa1Os1wgUaSkWDTBr4PDQ29
        LRaLNeOWlUplFIgqftF8RW30HAAhCg0Orjc3NUMeS5ZWqH+7vb19kqubO2o00NCGtx05x8UdxW+KN7pv
        X3Fx8eaEhITTdLJHsHiu8fVZ0aY+L/COZru6/VyQl0eN7gHxxEL7C4id5QQLBB3KYdvkZFE5dQ/xfdmz
        Z1cSCCpsL5MVxEADAxZQKo23NQ0NDb8H4621x6yrwffKUp0/S5csPaudP7Nd3TUBLPSBHqBRc53nosSN
        vW9hlhYUbIgXp56hkwPCgwdPeWHh0X9ksqDxg43gRZixLePIgz42thGGEHQH2B/Uf+wXCTwU2EP5nQER
        1yumkUHe16y4lhrPFMjMTMmFVjrt/nYNdVBXxkSJwmRKCPG+o12c3ZGnp9dFaoNO4Lf+qpkznXVeKrC+
        aNGi7wMCAprw/mzaPOCAuLs6uyAuNKzR4qlUlsZAfRm1gQECfPybXWa5IriXtMkgWEzj8MvBKJGAaw4P
        Df2rJE+6hjZR1NfXL9AeFw73MiY68irE59S+L9u3peSDyKqFFKirA++HjRITxLmQhvN2dZmDvL38G/Bx
        WNRGncACPgrnzy/a+VNqRP7g45lA/rjNND5/1Milkk2bEsR/opMEQvfgP5o59sRapFKpUfVU6rG4bFxM
        w0l10AjE4UAAXFUXCxZb1YcuOzu3x8al6urqBbgY2G1rNPwWvaoBn7Pp6jDfpnFjR+vUmZbJsqMgbmFV
        fZOmOHz/fpsD18oWxSdvOQ5pKP7zeTYoKSn5U2oDLfBxR013nIFERkaieR5AEQuKrQG+AVUXz118f/3a
        TSX4vHRKEfpITUqSWgtsDHpo2sgUio2JieIyOmkQ/PscP2+vu07T3PT2R1SDt2NGhPk3WVlaY8+0476U
        FEujoStbLS6i0iYGFPetraeixMQ0qnM3FO0FgslIJNpO3afuoF/4yM8voOLit5XvrVuzCeJm9pg/W0RJ
        UluBldH5o0ZZJF+fkJpmtAdPeIXBHspKb2/ve8b8IQcKuj8bFcVHJBJ9qbLqpzsxXRPi22RrY4WatDyg
        U8V50RAY4ixdpAegdZRvY4+EKelUmLLz1APNxkV20SFqAy3Am5poY4ukEumgxjnM2L4be3JstHjR0lZj
        q1327cqQjBszXscjNIRMIVu3OVFsdJ1piVy6ksMYiUwYZigk1L/0wYOuRVK4L1Fhvs3ccXydXhZKRUGM
        OYuBKs93lHza8EvOxnoGio9Lp8S0sRHqM0fi/0Omwf8DsGNHBhZcJvpo0dIbxubP/szMggljxhqdP2qK
        i6VrNwhFJ+kkgaAfqG/Cxftn4K3RpiEHdDamVzXAQ7syxKdp7Jg3dIbCnSmRRL+GH9qzWg014AHxrO3Q
        +s2qmI+1Dc3zWEwz7JluOUJtoMVjqPfj8lCSKMWo+JBqFAoFTIurMwpj5MiRmnX1At8XFBT44nWDoCdo
        7IfvL/oZvGRjxSJjW1oBdATXJxZKpSyMeinRdcpUnAP8acIxR0zTEYgBo3GoETnwkkneTu/WhbN/PL+c
        b2mH2BzVcXbt2rdb+yWM1zmhgZ6NvPECXGJ4rDmPUiym4Jk21DZoxBRKDDzeZJQQny6FdGNjIyWmcXH6
        g3poA0MrP/hg0Q/THI2v489ISyu05qnq2GlTF4qKisJNmKrAI6+/xoH6HKrBC8I6mrw2GjGYuPRFRURi
        o8RksV4PGho88QddYmMiEybeF993sgzdRd0FS13KptPGA4IUEhJyHT/cQ6pDszaqqoOuwAMcHejVyLPk
        6ohpseR4NDwAZy9e1Cnmg2e6SZRC/fkhkjmPa40SEhK7hDWDRhNrXBT09PCqAmGgzS8cuVS+Upwoynew
        n4Q8Pb2rtQWrO1JxMRZGhBnreRUpi2ITk1J7PU8PPhe2vLgw0NqGS4mF34pATcQihBpMo8P9mgQWcB4d
        xXyFLD/GnM3Cnql2Mb/NQSCYij3RHZSYQtrGZjoSizN6HDkjlcqjxeKknIn2U5Dn8hVwr4zIH6Hchi/o
        tWeqVMhi1m1OUNBJAqErJSUlK728vO4a80fUBmZchK4pdPGbritVDf1iMLFnBt4P/XksO9uL2skw1NuB
        Xu9Md2JqujLUv2HCuPE6I6BOFUsoMa2+ck0zLA4eUqrOVLSVmhMGpnRwnjUbeXn5QIu5TlcnaEWeOcOJ
        urb6ev3dkJ43NTUVCw8dPLgL1jN2UMKCcnIKDPbDxddhEhsZ1QyerLENLOWny1ev35zQq65R2sA9iI6O
        aRgzGlruO7pBRYX6N1mM4erUmao907rLHWPlqeoX7mQkjFcV88HDdHKai+9LqMHhi5A/Bw8ezoD1jIzM
        EyDoOTl5PeUPMzYy4qaT47ReN0AVFRXGilLTjKpbJryCQKONi4vLs/6Oa+8P6qjnqpRKmFWrOnQnpqzY
        EP9a6PN448YdW9rMUBbmUg1Q2lM/gCdijT28DfHJmv6z6emZRc7OrtCY0iUeQNrWrdkg7jweD1VVddS9
        AidPnvRoamrqlWfTG6C6JS5uI8SBpMQExN3JyQlZTODjl8YjzXV2Bm8/CoRCLEwyuuvPidzc1YmipFI6
        aRB8fPaJ41kb1eelRi4vjhbw7bTFlBUR6lvPs7TSicZTUiyPBs/0vFadKfz3+FwHlCLenkObGDt3Hiyd
        Pt2926K7Kn/iOuXPrP+DvqmGhhXD9B5OjlNx/oh73TVKLpes3DyA/UwJLxH4j8gJCgpqzs7O7tKCjoWH
        t3Pnzq108oWh9m5VKR26EdN7I+e7zqA8yL/85S9vq2zILFW8+RQbe8S5EqmmU3NDA9TTsZGPX+gl9UN4
        5UrTwvHjLfS27ILnsmTJkhZ1/Yl6Wbhw4Q8rVqzQTFA20ODjmkZGhF0/nvUl1L9qKC8vi4UpWqY6OqH7
        95/qDcZCvTAEVjp1kj1RUlayUiROKqaTBoFrDgsObA8KCGtTj76Bz5CQsKb4zWKNGMLLyd11Or4vbFRx
        rlpzXzZuXPsN3CtZAVW3TNHcDOdqhlb4BGmC+9bUNC0cN84aX2fXmA2wTURERGNWVpZO/pSVnVJF/3Gc
        Dvt1mz/QJ7mhrqHXQ0qVSkVMfKKIeKaErshksmCIrqJd8apewK5Q6M6k+KKgi/qwqNFe1wAezdSJtr+C
        B4qTiMnioK+zs9fiF0QNCCks0EAQn5xyTKlUUg1DIKYMphmaMtWJ6hAO4oCFoL27Lln4e3ZaWtpec3OY
        hoGBLCws0JEjRyASjY5nNpBs35Z2gonPHRowKivPU4F+cREzXFWdgs/fRNX1rK6u67htZZEy1sfLG/rA
        Gi30ENknIUGkpJMGwcc1yfn66w3tLe2Tdu7cc5TFYSILLhWZaCv+jqovhXBtAu4Y9JoZRCeChYOL3/lr
        AwIC6tQRi8AuEiZlS+US6C2BmCZQOjFDkydPxodBcF9Mg4Nj2vF+q+CY2qSlqUoM8J+trFQFQi4uLg6F
        PKEaeqgITAwoTTjDd9qUFitW+Xh73lKfa28oLpZHJCanEM+UMHwwVkwHipqaq7+BIrSxrcFDFfCkXWY5
        P9PuED+cgfsydZrjgEVIgpcnzp+/Q39m2kQgvPxoFa3VdarPFeylr/b39+91vMahApx3SEhQbUHe0O2R
        0RcKpAWrvFf43MHX168ISXT+XCnI73kE2VAHJt3bkZ6+d677nMd3tNoJ+gq8fJXKMoMNd0MJfC/ZX3zx
        xaAH/B5OaLfsP3cxBXBRf9177733/d27dy1o07Dg6dOnvLDQoMsHD+6nWrZfNkpKSta+8+67j/oaIenZ
        s2f80NDQmv379++lTcOWO3fu2PImWPwTekRYjhvf/4Don3yaudzD6xrECKBNw4L29naBh4fHjezs7Jci
        2ttzBxqjet1ptp/AEM6TJ08aPff4YIPf0swjRw6lNDS8HEX77qiur15QKC/s9YOD84d1+PDhrUNxWpe+
        Al72mtiVtf0VU5h54MC+A/0OvD1YwHmHhYXVSySSV3QyvN4BQvpCxZRAGOrACyI8OOQq9lB7PfBATXV1
        /QKn6TPRTz/9NKznjId2gtmzZz+5cOECKfIbQquHAYFAoMFiahrsF9BiZ2Xdt4Doj9BoN5fZSJInGdDA
        24OFQqGI8fX1hSmwX8257wkEQt/AosHGnmkLFPPVnikUeaVSadD8ufN+uHz58nwY1LB06dIb8NXRo0d1
        AqJXX6pewOcKEIw8o006wLEUiuIggZXNr9DVjMe3QvsOHdkCdnqTAQUGWdjY2PwTr1LOE7SVxMfHw3TM
        I4KCgqgZR2HpbiQi5IGdnR1MEEi8UwKBYDxYZFiRgWHXuWMtKM8URE4Yt7HUjMVEHAYbfXL402SIwg/b
        ygtV/ZMv0bON4m05IcFht2C6FH3z78OxwkOjW5KSkovwOuXpyRSyMBBVoSiJGob9PIBBFuHhofUQvN3D
        w+Mi/u0RYL99+/bU+fPnG5zhFgaIQOxfkUjU31lQCQTCqwQWGtZqv6hmmzECnWldMreKsk0Zpqi2smP0
        W/PVmrkwqCVOmJoFaehrC8Lj4xnYAsJJbaSFTKaMmjZFty4V+l8v9fC67unld0UtsM8DCPg93332rxCb
        WO01K5Wl63Jz81dTG3QDPifm6uiYJscpU3sdb4FAILzCgHis8Y1umjTWTkdMlQXHw0yxZ1pTcXUubcJF
        4CZ7K8vxSJS84wSkwcOzs7FFCfGpXYKeg9C6wZQucSm9jiA2UFScOzd3lDkH+fqsqKm8cGHR+vUbz+Dr
        pbxUQySJRMUQCQxG39EmAoFAMAyI6Sqf8Ab7MTY6rfnlshxKTM+dq9GIKYSSnGJvg+ISt+ZBGqaXgWJ/
        YkIKNUWMNlBlYM23R1KJfFAbpvZl7siCc/zw/Q/aje1tkJm+QwnTvXeegJFAIBC6BYspa2PI6qt2o3Vj
        1pYr8igxvXTpiibs5N27rfb2Vjy0ifZEYbJMCJuZmJhKias2cCxbKwcstMldhNYQcrkc+mVT8Tzg09CS
        K5H0OH0RVCt4e3rddpo+w+iuW7t27CzlW1gSMSUQCMaDxZS9Nii2wXLEeNSKxZI2M8qwZ8pmMFF1tZaY
        YoG0trRE8cJUKvA2zKhhY2WNkkRbqLQ2reCZCuyQp4cPBCEftG5GZcqiqPi4uDyY2dbLyxsiifV4Lump
        qWUgpqSYTyAQjAbEdE1wbIPtOOhn2iGmpXJJKIhpTU1HnSmI6UQbayRO2U7Vg4LX5+42G/l4+9/Ax9Fp
        gILGG1dndzTCbJRmOvQXTV1V1ZuH9u/dhc/NZM/u3dhDZqLjx3N0Qi12Bm/LjAoL/74vAb8JBMIrDBYP
        VqRvWI0DbyK6ceOGJtBJUWF+CBTzv/32ksYzhWmwrXlctDGuIxi2WCQqcaS6RnWNkrZ9244TEB4RRlfV
        Xe6YJh0oO3Vm2fMMIg/H3rB+rRRfH+WJUlHQXNyQlZUNLr533zUKGs4WzJ2HhPHxvZqvjUAgvOJAv8oF
        LvMRG4Tz0rf/BjaEWsySRZuLWFgIFTKlJgJUQ23tPGjM8VkRqBkhdKXmykIul4/a2roG3gYB+3jRR9fY
        DBNkyuZQsWfBO1z4m3+/5+dHzfH1XDruw3EjwkMbpVIqvq0GmMEBft9x2sxupxaHul6YIFF7+nACgUAw
        yJ07N2xtbax+geI8m8FBbFMO+jLr99EhQb4XIJg4eJVsljnaFJ/4lbRYHgpiCAuLbY6mOs6kisEgXIGB
        gY0FBTK94Qjx96b7d2dmwH7QWAWe4fadmUKw05sMODt3pFMt+NBp/8KFC5RHrJCpBguYmY2gBB0WdTBw
        bUpLS2MC/PwhIPqwDNhCIBCGMRBFa/LUKcM+0AkU8WfOcHpUqTWnGIFAILxQpHLpSh9fP/DoeuwUPxQB
        TzQ8NOyyQtYxnxiBQCAMCvmFhbHvfvDxdzdv6p+AcKgCgcLDQ8PPHz50KJM2EQgEwuBS29A8r7j4dCCd
        HPJgj9Tks6OfiSsrSdGeQCAQCAQCgUAgEAgEAoFAIBAIBAKB8NLAYPw/koWpzd+gH5kAAAAASUVORK5C
        YII=
</value>
  </data>
</root>